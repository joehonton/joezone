module.exports=class StackTrace{constructor(){Object.seal(this)}static getFunctionName(depth){var stackTraceLine=(new Error).stack.split("\n")[depth],regex1=/at (.*) ?\(/g,matches=regex1.exec(stackTraceLine),desiredOutput="";return null==matches?stackTraceLine:(matches.length>1&&(desiredOutput+=matches[1].trim()),`{${desiredOutput=StackTrace.rightAlign(desiredOutput,30)}}`)}static getSitus(depth){var stackTraceLine=(new Error).stack.split("\n")[depth],regex1=/at .*\((.*)\)/g,matches=regex1.exec(stackTraceLine),desiredOutput="";return matches.length>1&&(desiredOutput+=matches[1].trim()),desiredOutput}static getInfo(depth){var info={classname:"",member:"",path:"",filename:"",line:"",column:""},stackTraceLine=(new Error).stack.split("\n")[depth],regexA=/at (.*) ?\(/g,matchesA=regexA.exec(stackTraceLine),classAndMember="";matchesA.length>1&&(classAndMember=matchesA[1].trim());var partsA=classAndMember.split(".");info.classname=partsA[0],partsA.length>1&&(info.member=partsA[1],info.member=info.member.replace(" (eval at evaluate",""));var regexB=/at .*\((.*)\)/g,matchesB=regexB.exec(stackTraceLine),pathFileLineColumn="";matchesB.length>1&&(pathFileLineColumn=matchesB[1].trim());var partsB=pathFileLineColumn.split(":"),pathAndFile=partsB[0];partsB.length>1&&(info.line=partsB[1]),partsB.length>2&&(info.column=partsB[2]);var slash=pathAndFile.lastIndexOf("/");return-1!=slash?(info.path=pathAndFile.substr(0,slash),info.filename=pathAndFile.substr(slash+1)):info.filename=pathAndFile,info}static rightAlign(s,width){var columnLen=width,stringLen=s.length;return stringLen>columnLen?s.substr(0,columnLen-3)+"...":Array(columnLen+1-stringLen).join(" ")+s}};