var expect=require("./expect.function.js"),aver=require("./aver.function.js"),TextReader=require("./text-reader.class.js"),Pfile=require("./pfile.class.js");module.exports=class{constructor(){this.table=new Int32Array(256),this.crc=4294967295,this.initialize()}initialize(){for(let i=0;i<=255;i++){this.table[i]=this.reflect(i,8)<<24;for(let iPos=0;iPos<8;iPos++)this.table[i]=this.table[i]<<1^(this.table[i]&1<<31?79764919:0);this.table[i]=this.reflect(this.table[i],32)}}reflect(oldValue,numBits){expect(oldValue,"Number"),expect(numBits,"Number");var newValue=0;for(let i=1;i<numBits+1;i++)1&oldValue&&(newValue|=1<<numBits-i),oldValue>>>=1;return newValue}partialCRC(dataBuffer,dataLen){expect(dataBuffer,"Buffer"),expect(dataLen,"Number");for(let i=0;i<dataLen;i++){var step1=this.crc>>>8,step2=255&this.crc,step3=dataBuffer[i],step4=step2^step3;aver(step4>=0&&step4<=255);var step5=this.table[step4];this.crc=step1^step5}}computeFileCRC(filename){if(expect(filename,["String","Pfile"]),"String"==filename.constructor.name&&(filename=new Pfile(filename)),!filename.exists()||!filename.isFile())return!1;var tr=new TextReader(filename.name);if(!tr.open(filename.name))return!1;for(;tr.readBlock();)this.partialCRC(tr.buffer,tr.bufferLength);return tr.close(),!0}getResult(){var result=4294967295^this.crc;return result}};