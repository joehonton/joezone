var StackTrace=require("./stack-trace.class.js");module.exports=function(obj,expectedType,message){message=message||"";if(void 0===expectedType)return logicMessage("'type' should be a String or an Array of Strings, but is undefined"),!1;if(null===expectedType)return logicMessage("'type' should be a String or an Array of Strings, but is null"),!1;if("String"==expectedType.constructor.name){if(1==expectOne(obj,expectedType,message))return!0}else{if("Array"!=expectedType.constructor.name)return logicMessage("'type' should be a String or an Array of Strings"),!1;for(let type of expectedType)if(1==expectOne(obj,type,message))return!0}var s="";return s="String"==expectedType.constructor.name?`Expected type '${expectedType}'`:"Expected one of these types '"+expectedType.join("|")+"'",expectMessage(void 0===obj?`${s}, but got 'undefined' ${message}`:null===obj?`${s}, but got 'null' ${message}`:`${s}, but got '${obj.constructor.name}' ${message}`),!1};function expectOne(obj,expectedType,message){if(void 0===obj)expectMessage(`Expected 'Object', but got 'undefined' ${message}`);else if(null===obj)expectMessage(`Expected 'Object', but got 'null' ${message}`);else if("Object"!=obj.constructor.name)expectMessage(`Expected 'Object', but got '${obj.constructor.name}' ${message}`);else if(void 0===obj.jsClassName)expectMessage(`Expected 'jsClassName' to be a String, but got 'undefined' ${message}`);else if(null===obj.jsClassName)expectMessage(`Expected 'jsClassName' to be a String, but got 'null' ${message}`);else if("String"!=obj.jsClassName.constructor.name)expectMessage(`Expected 'jsClassName' to be a String, but got '${obj.jsClassname.constructor.name}' ${message}`);else if("String"!=expectedType.constructor.name)expectMessage(`Expected 'expectedType' to be a String, but got '${expectedType.constructor.name}' ${message}`);else{if(obj.jsClassName==expectedType)return!0;expectMessage(`Expected '${expectedType}', but got '${obj.jsClassName}' ${message}`)}}function logicMessage(message){writeToConsoleOrStderr(`[*EXPECT*] Logic: ${message=message||""}\n`)}function expectMessage(message){message=message||"",writeToConsoleOrStderr(`[*EXPECT*]${StackTrace.getFunctionName(4)} ${message}\n`)}function writeToConsoleOrStderr(message){if("object"==typeof console&&"function"==typeof console.warn)console.warn(message);else{if("object"!=typeof process||"object"!=typeof process.stderr||"function"!=typeof process.stderr.write)throw new Error(message);process.stderr.write(message)}}